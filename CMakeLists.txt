cmake_minimum_required(VERSION 3.2)

set(PATCH_VERSION "1" CACHE INTERNAL "Patch version")
set(PROJECT_VESRION 0.0.${PATCH_VERSION})


# имя проекта
project(home_work3_project_name VERSION ${PROJECT_VESRION})


# имя основной утилиты будет таким же как и имя проекта?
add_executable(home_work3
src/main.cpp 
src/work_obj.cpp)

# пока не буду делать библиотеку, но по идее потом может и надо буует
#add_library(helloworld lib.cpp)
#add_executable(test_version test_version.cpp)

set_target_properties(home_work3 PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
)
target_include_directories(home_work3
    PRIVATE "${CMAKE_BINARY_DIR}"
)

#  Пока не надо - тестов не добавляю
#set_target_properties(test_version PROPERTIES
#    COMPILE_DEFINITIONS BOOST_TEST_DYN_LINK
#    INCLUDE_DIRECTORIES ${Boost_INCLUDE_DIR}
#)


# Пока всё без доп библиотек
#target_link_libraries(helloworld_cli PRIVATE
#    helloworld
#)
#target_link_libraries(test_version
#    ${Boost_LIBRARIES}
#    helloworld
#)


if (MSVC)
    target_compile_options(home_work3 PRIVATE
        /W4
    )
else ()
    target_compile_options(home_work3 PRIVATE
        -Wall -Wextra -pedantic -Werror
    )
endif()



install(TARGETS home_work3 RUNTIME DESTINATION bin)

set(CPACK_GENERATOR DEB)

set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")

set(CPACK_PACKAGE_CONTACT example@example.com)

include(CPack)

# Тестов пока нет
#enable_testing()
#add_test(test_version test_version)
